<?xml version="1.0" ?><AVNServer>
<!-- some basic configuration
     debugToLog controls whether any debug output will also go to the logfile
     you can change the loglevel by an HTTP request to the navurl:
     http://somehost:8080/viewer/avnav_navi.php?request=debuglevel&level=DEBUG
     maxtimeback: maximal time in seconds that we allow the system clock to go back before we delete all data
     settimecmd: command to set the systemtime (must accept time in format like date - utc - and must be able to run as pi)
     systimediff: timediff in seconds between gps timestamp and system time that we allow before we set gps time
     settimeperiod: time in seconds befor we retry setting the systemtime
-->
<!-- the workers section -->
<Workers>

<AVNHttpServer httpPort="8080" index="/viewer/avnav_viewer.html" navurl="/viewer/avnav_navi.php">
    <MimeType extension=".avt" type="text/plain"/>
    <MimeType extension=".log" type="text/plain"/>
</AVNHttpServer>
<!-- the writer for track data
     tracks are written in a simple file
     each line consists of:
     timestamp,lat,lon,course,speed
     timestamp being in ISO8601 format, others in float
     interval is the minimum interval between writing trackpoints
     mindistance is the minimum distance in m before a new trackpoint is written (interval wins)
      -->
<AVNTrackWriter interval="10" mindistance="50"/>
<!-- an TCP writer that will provide data from the feeder input to other systems
     port - the listener port
     filter can be either $XXX,... - the NMEA setence, in this case the first 2 characters are ignored or
         any other value like !AIVDM. If not set or empty any data will be sent out
     address - if set, only bind to this address, otherwise allow connections from any port
         read    - if set to true allow data input from connected devices
         minTime - when reading data wait that many milliseconds between records to avoid overloading
         readFilter - if set, only read filtered data
 -->
<!-- a tcp socket that will output all NMEA data that AvNav has received
     you can customize it using the filter -->
<AVNSocketWriter blackList="signalk" enabled="true" filter="$RMB,$APB" maxDevices="5" minTime="50" name="tosignalk" port="28628" read="true"/>
<AVNSocketReader enabled="False" filter="^$RMB,^$APB" host="localhost" name="signalk" port="10110"/>
<AVNPluginHandler>
<builtin-Sail_Instrument TWD_filtFreq="0.2" LL_Minutes="5" Area_Minutes="1"/>
<system-history storeKeys="gps.signalk.environment.wind.angleApparent,gps.windAngle,gps.updateconfig,gps.signalk.navigation.speedThroughWater,gps.waterSpeed" period="2.0" sensorNames="" enabled="False"/>
<system-ocharts enabled="False"/>
<system-mapproxy enabled="False"/>
<builtin-canboat enabled="False"/>
<builtin-testPlugin enabled="False"/>
<builtin-Sail_Instrument_loc TWD_filtFreq="0.2" LL_Minutes="1" enabled="False"/>
</AVNPluginHandler>

<!-- create chart overview files -->
<AVNChartHandler/>
<!--  routing handler 
      additional parameters:
      interval: interval in seconds for computing RMB data (default: 5)
      computeRMB: default True, set to false if you do not want RMB computation
-->
<AVNRouter/>
<!-- log nmea data
     will create .nmea(.gz) files in the tracks directory
     parameters:
     maxfiles: the number of logs (1 per day) that are kept - default 100
     filter: the filter for the sentences to be written, default "$RMC,$DBT,$DBP" - suitable to help openseamap by logging depth
     interval: minimal interval in seconds between sentences of the same type (default: 5)
-->
<AVNNmeaLogger/>
<AVNImporter/>
<!-- add the following property to AVNWpaHandler to be able to allow external access for wlan client
     firewallCommand="sudo -n $BASEDIR/../raspberry/iptables-ext.sh wlan-av1"
-->
<AVNCommandHandler>
     <Command command="sudo shutdown -P" name="shutdown"/>
     <Command command="/bin/sh $BASEDIR/../raspberry/sound.sh 90%" name="sound" repeat="1"/>
</AVNCommandHandler>

</Workers>
<AVNSignalKHandler decodeData="True" fetchAis="True" fetchCharts="False" migrated="True" receiveNotifications="True" sendData="True" uuid="8ec90897-b1ed-4f29-a5a1-66a443853847" userName="pi" password="raspberry" ignoreTimestamp="True"/>
<AVNAlarmHandler>
        <!-- legacy way of configuring alarms - still supported but not recommended, use category at least and optionally parameter -->
    <!--  <Alarm name="ais" category="info" command="aisAlarm" parameter="$BASEDIR/../sounds/anchorAlarm.mp3" repeat="20000"/>-->
    <Alarm name="AIS" category="info" sound="aisAlarm.mp3" repeat="1"/>

        <!-- with the next line we configuer a special command that will be called when we receive a "sinking" notification from SignalK
             the sound is determined by the category - and this is also the parameter that the command will receive -->
</AVNAlarmHandler>    

<AVNRemoteChannelHandler enabled="False"/>
</AVNServer>